//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//
//
// <copyright file="Customer.cs" company="Multinerd">
//     Copyright (c) Multinerd. All Rights Reserved.
// </copyright>
//------------------------------------------------------------------------------

using Prism.Mvvm;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics.CodeAnalysis;

namespace EntityPlus
{
	[GeneratedCode("Tessa", "1.2.3.4")]
	/// <summary> Customer model class.</summary>
	public partial class Customer : BindableBase, IEditableObject
    {
		/// <summary> Initializes a new instance of the <see cref="Customer"/> class.</summary>
		[SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
		public Customer()
		{
			this.Invoices = new HashSet<Invoice>();
        }
	
        /// <summary>Gets or sets the CustomerId property</summary>
		[Key, Required]
		[DisplayName("Customer Id"), Display(Name = "Customer Id")]
		public int CustomerId
        {
            get { return this._CustomerId; }
			set { this.SetProperty(ref this._CustomerId, value); }
        }

		/// <summary> CustomerId backing field</summary>
        private int _CustomerId;


        /// <summary>Gets or sets the FirstName property</summary>
		[Required, StringLength(40)]
		[DisplayName("First Name"), Display(Name = "First Name")]
		public string FirstName
        {
            get { return this._FirstName; }
			set { this.SetProperty(ref this._FirstName, value); }
        }

		/// <summary> FirstName backing field</summary>
        private string _FirstName;


        /// <summary>Gets or sets the LastName property</summary>
		[Required, StringLength(20)]
		[DisplayName("Last Name"), Display(Name = "Last Name")]
		public string LastName
        {
            get { return this._LastName; }
			set { this.SetProperty(ref this._LastName, value); }
        }

		/// <summary> LastName backing field</summary>
        private string _LastName;


        /// <summary>Gets or sets the Company property</summary>
		[StringLength(80)]
		[DisplayName("Company"), Display(Name = "Company")]
		public string Company
        {
            get { return this._Company; }
			set { this.SetProperty(ref this._Company, value); }
        }

		/// <summary> Company backing field</summary>
        private string _Company;


        /// <summary>Gets or sets the Address property</summary>
		[StringLength(70)]
		[DisplayName("Address"), Display(Name = "Address")]
		public string Address
        {
            get { return this._Address; }
			set { this.SetProperty(ref this._Address, value); }
        }

		/// <summary> Address backing field</summary>
        private string _Address;


        /// <summary>Gets or sets the City property</summary>
		[StringLength(40)]
		[DisplayName("City"), Display(Name = "City")]
		public string City
        {
            get { return this._City; }
			set { this.SetProperty(ref this._City, value); }
        }

		/// <summary> City backing field</summary>
        private string _City;


        /// <summary>Gets or sets the State property</summary>
		[StringLength(40)]
		[DisplayName("State"), Display(Name = "State")]
		public string State
        {
            get { return this._State; }
			set { this.SetProperty(ref this._State, value); }
        }

		/// <summary> State backing field</summary>
        private string _State;


        /// <summary>Gets or sets the Country property</summary>
		[StringLength(40)]
		[DisplayName("Country"), Display(Name = "Country")]
		public string Country
        {
            get { return this._Country; }
			set { this.SetProperty(ref this._Country, value); }
        }

		/// <summary> Country backing field</summary>
        private string _Country;


        /// <summary>Gets or sets the PostalCode property</summary>
		[StringLength(10)]
		[DisplayName("Postal Code"), Display(Name = "Postal Code")]
		public string PostalCode
        {
            get { return this._PostalCode; }
			set { this.SetProperty(ref this._PostalCode, value); }
        }

		/// <summary> PostalCode backing field</summary>
        private string _PostalCode;


        /// <summary>Gets or sets the Phone property</summary>
		[StringLength(24)]
		[DisplayName("Phone"), Display(Name = "Phone")]
		public string Phone
        {
            get { return this._Phone; }
			set { this.SetProperty(ref this._Phone, value); }
        }

		/// <summary> Phone backing field</summary>
        private string _Phone;


        /// <summary>Gets or sets the Fax property</summary>
		[StringLength(24)]
		[DisplayName("Fax"), Display(Name = "Fax")]
		public string Fax
        {
            get { return this._Fax; }
			set { this.SetProperty(ref this._Fax, value); }
        }

		/// <summary> Fax backing field</summary>
        private string _Fax;


        /// <summary>Gets or sets the Email property</summary>
		[Required, StringLength(60)]
		[DisplayName("Email"), Display(Name = "Email")]
		public string Email
        {
            get { return this._Email; }
			set { this.SetProperty(ref this._Email, value); }
        }

		/// <summary> Email backing field</summary>
        private string _Email;


        /// <summary>Gets or sets the SupportRepId property</summary>
		[DisplayName("Support Rep Id"), Display(Name = "Support Rep Id")]
		public Nullable<int> SupportRepId
        {
            get { return this._SupportRepId; }
			set { this.SetProperty(ref this._SupportRepId, value); }
        }

		/// <summary> SupportRepId backing field</summary>
        private Nullable<int> _SupportRepId;


		/// <summary> Gets or sets the Employee navigation property</summary>
		public virtual Employee Employee { get; set; }

		/// <summary> Gets or sets the Invoices navigation property</summary>
		[SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
		public virtual ICollection<Invoice> Invoices { get; set; }

	        
		#region IEditableObject

		private Customer_Backup _Customer_Backup;

		private struct Customer_Backup 
		{
			internal int _CustomerId;
			internal string _FirstName;
			internal string _LastName;
			internal string _Company;
			internal string _Address;
			internal string _City;
			internal string _State;
			internal string _Country;
			internal string _PostalCode;
			internal string _Phone;
			internal string _Fax;
			internal string _Email;
			internal Nullable<int> _SupportRepId;
		}

        public void BeginEdit()
        {
			_Customer_Backup = new Customer_Backup() 
			{
				_CustomerId = CustomerId,
				_FirstName = FirstName,
				_LastName = LastName,
				_Company = Company,
				_Address = Address,
				_City = City,
				_State = State,
				_Country = Country,
				_PostalCode = PostalCode,
				_Phone = Phone,
				_Fax = Fax,
				_Email = Email,
				_SupportRepId = SupportRepId,
			};
		}

		public void CancelEdit()
        {
			CustomerId = _Customer_Backup._CustomerId;
			FirstName = _Customer_Backup._FirstName;
			LastName = _Customer_Backup._LastName;
			Company = _Customer_Backup._Company;
			Address = _Customer_Backup._Address;
			City = _Customer_Backup._City;
			State = _Customer_Backup._State;
			Country = _Customer_Backup._Country;
			PostalCode = _Customer_Backup._PostalCode;
			Phone = _Customer_Backup._Phone;
			Fax = _Customer_Backup._Fax;
			Email = _Customer_Backup._Email;
			SupportRepId = _Customer_Backup._SupportRepId;
        }

        public void EndEdit()
        {
			_Customer_Backup._CustomerId = CustomerId;
			_Customer_Backup._FirstName = FirstName;
			_Customer_Backup._LastName = LastName;
			_Customer_Backup._Company = Company;
			_Customer_Backup._Address = Address;
			_Customer_Backup._City = City;
			_Customer_Backup._State = State;
			_Customer_Backup._Country = Country;
			_Customer_Backup._PostalCode = PostalCode;
			_Customer_Backup._Phone = Phone;
			_Customer_Backup._Fax = Fax;
			_Customer_Backup._Email = Email;
			_Customer_Backup._SupportRepId = SupportRepId;
        }

		#endregion
 
		#region SampleData

		public static Customer GetRandomCustomer()
        {
            return new Customer()
            {
				CustomerId = 13,
				FirstName = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				LastName = "XXXXXXXXXXXXXXXXXXXX",
				Company = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				City = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				State = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Country = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				PostalCode = "XXXXXXXXXX",
				Phone = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Fax = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Email = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
            };
        }

		public static IList<Customer> GetRandomCustomers()
        {
			var list = new List<Customer>();
			
			list.Add(new Customer()
			{
				CustomerId = 14,
				FirstName = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				LastName = "XXXXXXXXXXXXXXXXXXXX",
				Company = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				City = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				State = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Country = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				PostalCode = "XXXXXXXXXX",
				Phone = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Fax = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Email = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
			});

			list.Add(new Customer()
			{
				CustomerId = 15,
				FirstName = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				LastName = "XXXXXXXXXXXXXXXXXXXX",
				Company = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				City = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				State = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Country = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				PostalCode = "XXXXXXXXXX",
				Phone = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Fax = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Email = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
			});

			list.Add(new Customer()
			{
				CustomerId = 16,
				FirstName = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				LastName = "XXXXXXXXXXXXXXXXXXXX",
				Company = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				City = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				State = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Country = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				PostalCode = "XXXXXXXXXX",
				Phone = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Fax = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Email = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
			});

			list.Add(new Customer()
			{
				CustomerId = 17,
				FirstName = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				LastName = "XXXXXXXXXXXXXXXXXXXX",
				Company = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				City = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				State = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Country = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				PostalCode = "XXXXXXXXXX",
				Phone = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Fax = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Email = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
			});

			list.Add(new Customer()
			{
				CustomerId = 18,
				FirstName = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				LastName = "XXXXXXXXXXXXXXXXXXXX",
				Company = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				City = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				State = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Country = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				PostalCode = "XXXXXXXXXX",
				Phone = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Fax = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Email = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
			});

			return list;
        }

		#endregion
 

	} 
} 

