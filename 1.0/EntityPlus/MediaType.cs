//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//
//
// <copyright file="MediaType.cs" company="Multinerd">
//     Copyright (c) Multinerd. All Rights Reserved.
// </copyright>
//------------------------------------------------------------------------------

using Prism.Mvvm;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics.CodeAnalysis;

namespace EntityPlus
{
	[GeneratedCode("Tessa", "1.2.3.4")]
	/// <summary> MediaType model class.</summary>
	public partial class MediaType : BindableBase, IEditableObject
    {
		/// <summary> Initializes a new instance of the <see cref="MediaType"/> class.</summary>
		[SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
		public MediaType()
		{
			this.Tracks = new HashSet<Track>();
        }
	
        /// <summary>Gets or sets the MediaTypeId property</summary>
		[Key, Required]
		[DisplayName("Media Type Id"), Display(Name = "Media Type Id")]
		public int MediaTypeId
        {
            get { return this._MediaTypeId; }
			set { this.SetProperty(ref this._MediaTypeId, value); }
        }

		/// <summary> MediaTypeId backing field</summary>
        private int _MediaTypeId;


        /// <summary>Gets or sets the Name property</summary>
		[StringLength(120)]
		[DisplayName("Name"), Display(Name = "Name")]
		public string Name
        {
            get { return this._Name; }
			set { this.SetProperty(ref this._Name, value); }
        }

		/// <summary> Name backing field</summary>
        private string _Name;


		/// <summary> Gets or sets the Tracks navigation property</summary>
		[SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
		public virtual ICollection<Track> Tracks { get; set; }

	        
		#region IEditableObject

		private MediaType_Backup _MediaType_Backup;

		private struct MediaType_Backup 
		{
			internal int _MediaTypeId;
			internal string _Name;
		}

        public void BeginEdit()
        {
			_MediaType_Backup = new MediaType_Backup() 
			{
				_MediaTypeId = MediaTypeId,
				_Name = Name,
			};
		}

		public void CancelEdit()
        {
			MediaTypeId = _MediaType_Backup._MediaTypeId;
			Name = _MediaType_Backup._Name;
        }

        public void EndEdit()
        {
			_MediaType_Backup._MediaTypeId = MediaTypeId;
			_MediaType_Backup._Name = Name;
        }

		#endregion
 
		#region SampleData

		public static MediaType GetRandomMediaType()
        {
            return new MediaType()
            {
				MediaTypeId = 43,
				Name = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
            };
        }

		public static IList<MediaType> GetRandomMediaTypes()
        {
			var list = new List<MediaType>();
			
			list.Add(new MediaType()
			{
				MediaTypeId = 44,
				Name = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
			});

			list.Add(new MediaType()
			{
				MediaTypeId = 45,
				Name = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
			});

			list.Add(new MediaType()
			{
				MediaTypeId = 46,
				Name = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
			});

			list.Add(new MediaType()
			{
				MediaTypeId = 47,
				Name = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
			});

			list.Add(new MediaType()
			{
				MediaTypeId = 48,
				Name = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
			});

			return list;
        }

		#endregion
 

	} 
} 

