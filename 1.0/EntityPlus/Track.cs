//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//
//
// <copyright file="Track.cs" company="Multinerd">
//     Copyright (c) Multinerd. All Rights Reserved.
// </copyright>
//------------------------------------------------------------------------------

using Prism.Mvvm;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics.CodeAnalysis;

namespace EntityPlus
{
	[GeneratedCode("Tessa", "1.2.3.4")]
	/// <summary> Track model class.</summary>
	public partial class Track : BindableBase, IEditableObject
    {
		/// <summary> Initializes a new instance of the <see cref="Track"/> class.</summary>
		[SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
		public Track()
		{
			this.InvoiceLines = new HashSet<InvoiceLine>();
			this.Playlists = new HashSet<Playlist>();
        }
	
        /// <summary>Gets or sets the TrackId property</summary>
		[Key, Required]
		[DisplayName("Track Id"), Display(Name = "Track Id")]
		public int TrackId
        {
            get { return this._TrackId; }
			set { this.SetProperty(ref this._TrackId, value); }
        }

		/// <summary> TrackId backing field</summary>
        private int _TrackId;


        /// <summary>Gets or sets the Name property</summary>
		[Required, StringLength(200)]
		[DisplayName("Name"), Display(Name = "Name")]
		public string Name
        {
            get { return this._Name; }
			set { this.SetProperty(ref this._Name, value); }
        }

		/// <summary> Name backing field</summary>
        private string _Name;


        /// <summary>Gets or sets the AlbumId property</summary>
		[DisplayName("Album Id"), Display(Name = "Album Id")]
		public Nullable<int> AlbumId
        {
            get { return this._AlbumId; }
			set { this.SetProperty(ref this._AlbumId, value); }
        }

		/// <summary> AlbumId backing field</summary>
        private Nullable<int> _AlbumId;


        /// <summary>Gets or sets the MediaTypeId property</summary>
		[Required]
		[DisplayName("Media Type Id"), Display(Name = "Media Type Id")]
		public int MediaTypeId
        {
            get { return this._MediaTypeId; }
			set { this.SetProperty(ref this._MediaTypeId, value); }
        }

		/// <summary> MediaTypeId backing field</summary>
        private int _MediaTypeId;


        /// <summary>Gets or sets the GenreId property</summary>
		[DisplayName("Genre Id"), Display(Name = "Genre Id")]
		public Nullable<int> GenreId
        {
            get { return this._GenreId; }
			set { this.SetProperty(ref this._GenreId, value); }
        }

		/// <summary> GenreId backing field</summary>
        private Nullable<int> _GenreId;


        /// <summary>Gets or sets the Composer property</summary>
		[StringLength(220)]
		[DisplayName("Composer"), Display(Name = "Composer")]
		public string Composer
        {
            get { return this._Composer; }
			set { this.SetProperty(ref this._Composer, value); }
        }

		/// <summary> Composer backing field</summary>
        private string _Composer;


        /// <summary>Gets or sets the Milliseconds property</summary>
		[Required]
		[DisplayName("Milliseconds"), Display(Name = "Milliseconds")]
		public int Milliseconds
        {
            get { return this._Milliseconds; }
			set { this.SetProperty(ref this._Milliseconds, value); }
        }

		/// <summary> Milliseconds backing field</summary>
        private int _Milliseconds;


        /// <summary>Gets or sets the Bytes property</summary>
		[DisplayName("Bytes"), Display(Name = "Bytes")]
		public Nullable<int> Bytes
        {
            get { return this._Bytes; }
			set { this.SetProperty(ref this._Bytes, value); }
        }

		/// <summary> Bytes backing field</summary>
        private Nullable<int> _Bytes;


        /// <summary>Gets or sets the UnitPrice property</summary>
		[Required]
		[DisplayName("Unit Price"), Display(Name = "Unit Price")]
		public decimal UnitPrice
        {
            get { return this._UnitPrice; }
			set { this.SetProperty(ref this._UnitPrice, value); }
        }

		/// <summary> UnitPrice backing field</summary>
        private decimal _UnitPrice;


		/// <summary> Gets or sets the Album navigation property</summary>
		public virtual Album Album { get; set; }

		/// <summary> Gets or sets the Genre navigation property</summary>
		public virtual Genre Genre { get; set; }

		/// <summary> Gets or sets the MediaType navigation property</summary>
		public virtual MediaType MediaType { get; set; }

		/// <summary> Gets or sets the InvoiceLines navigation property</summary>
		[SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
		public virtual ICollection<InvoiceLine> InvoiceLines { get; set; }

		/// <summary> Gets or sets the Playlists navigation property</summary>
		[SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
		public virtual ICollection<Playlist> Playlists { get; set; }

	        
		#region IEditableObject

		private Track_Backup _Track_Backup;

		private struct Track_Backup 
		{
			internal int _TrackId;
			internal string _Name;
			internal Nullable<int> _AlbumId;
			internal int _MediaTypeId;
			internal Nullable<int> _GenreId;
			internal string _Composer;
			internal int _Milliseconds;
			internal Nullable<int> _Bytes;
			internal decimal _UnitPrice;
		}

        public void BeginEdit()
        {
			_Track_Backup = new Track_Backup() 
			{
				_TrackId = TrackId,
				_Name = Name,
				_AlbumId = AlbumId,
				_MediaTypeId = MediaTypeId,
				_GenreId = GenreId,
				_Composer = Composer,
				_Milliseconds = Milliseconds,
				_Bytes = Bytes,
				_UnitPrice = UnitPrice,
			};
		}

		public void CancelEdit()
        {
			TrackId = _Track_Backup._TrackId;
			Name = _Track_Backup._Name;
			AlbumId = _Track_Backup._AlbumId;
			MediaTypeId = _Track_Backup._MediaTypeId;
			GenreId = _Track_Backup._GenreId;
			Composer = _Track_Backup._Composer;
			Milliseconds = _Track_Backup._Milliseconds;
			Bytes = _Track_Backup._Bytes;
			UnitPrice = _Track_Backup._UnitPrice;
        }

        public void EndEdit()
        {
			_Track_Backup._TrackId = TrackId;
			_Track_Backup._Name = Name;
			_Track_Backup._AlbumId = AlbumId;
			_Track_Backup._MediaTypeId = MediaTypeId;
			_Track_Backup._GenreId = GenreId;
			_Track_Backup._Composer = Composer;
			_Track_Backup._Milliseconds = Milliseconds;
			_Track_Backup._Bytes = Bytes;
			_Track_Backup._UnitPrice = UnitPrice;
        }

		#endregion
 
		#region SampleData

		public static Track GetRandomTrack()
        {
            return new Track()
            {
				TrackId = 55,
				Name = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				MediaTypeId = 174727,
				Composer = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Milliseconds = 120341,
            };
        }

		public static IList<Track> GetRandomTracks()
        {
			var list = new List<Track>();
			
			list.Add(new Track()
			{
				TrackId = 56,
				Name = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				MediaTypeId = 14894,
				Composer = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Milliseconds = 167506,
			});

			list.Add(new Track()
			{
				TrackId = 57,
				Name = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				MediaTypeId = 168193,
				Composer = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Milliseconds = 195064,
			});

			list.Add(new Track()
			{
				TrackId = 58,
				Name = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				MediaTypeId = 89165,
				Composer = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Milliseconds = 2694,
			});

			list.Add(new Track()
			{
				TrackId = 59,
				Name = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				MediaTypeId = 92400,
				Composer = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Milliseconds = 191765,
			});

			list.Add(new Track()
			{
				TrackId = 60,
				Name = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				MediaTypeId = 192542,
				Composer = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Milliseconds = 189014,
			});

			return list;
        }

		#endregion
 

	} 
} 

