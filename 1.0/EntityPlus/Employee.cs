//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//
//
// <copyright file="Employee.cs" company="Multinerd">
//     Copyright (c) Multinerd. All Rights Reserved.
// </copyright>
//------------------------------------------------------------------------------

using Prism.Mvvm;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics.CodeAnalysis;

namespace EntityPlus
{
	[GeneratedCode("Tessa", "1.2.3.4")]
	/// <summary> Employee model class.</summary>
	public partial class Employee : BindableBase, IEditableObject
    {
		/// <summary> Initializes a new instance of the <see cref="Employee"/> class.</summary>
		[SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
		public Employee()
		{
			this.Customers = new HashSet<Customer>();
			this.Employee1 = new HashSet<Employee>();
        }
	
        /// <summary>Gets or sets the EmployeeId property</summary>
		[Key, Required]
		[DisplayName("Employee Id"), Display(Name = "Employee Id")]
		public int EmployeeId
        {
            get { return this._EmployeeId; }
			set { this.SetProperty(ref this._EmployeeId, value); }
        }

		/// <summary> EmployeeId backing field</summary>
        private int _EmployeeId;


        /// <summary>Gets or sets the LastName property</summary>
		[Required, StringLength(20)]
		[DisplayName("Last Name"), Display(Name = "Last Name")]
		public string LastName
        {
            get { return this._LastName; }
			set { this.SetProperty(ref this._LastName, value); }
        }

		/// <summary> LastName backing field</summary>
        private string _LastName;


        /// <summary>Gets or sets the FirstName property</summary>
		[Required, StringLength(20)]
		[DisplayName("First Name"), Display(Name = "First Name")]
		public string FirstName
        {
            get { return this._FirstName; }
			set { this.SetProperty(ref this._FirstName, value); }
        }

		/// <summary> FirstName backing field</summary>
        private string _FirstName;


        /// <summary>Gets or sets the Title property</summary>
		[StringLength(30)]
		[DisplayName("Title"), Display(Name = "Title")]
		public string Title
        {
            get { return this._Title; }
			set { this.SetProperty(ref this._Title, value); }
        }

		/// <summary> Title backing field</summary>
        private string _Title;


        /// <summary>Gets or sets the ReportsTo property</summary>
		[DisplayName("Reports To"), Display(Name = "Reports To")]
		public Nullable<int> ReportsTo
        {
            get { return this._ReportsTo; }
			set { this.SetProperty(ref this._ReportsTo, value); }
        }

		/// <summary> ReportsTo backing field</summary>
        private Nullable<int> _ReportsTo;


        /// <summary>Gets or sets the BirthDate property</summary>
		[DisplayName("Birth Date"), Display(Name = "Birth Date")]
		public Nullable<System.DateTime> BirthDate
        {
            get { return this._BirthDate; }
			set { this.SetProperty(ref this._BirthDate, value); }
        }

		/// <summary> BirthDate backing field</summary>
        private Nullable<System.DateTime> _BirthDate;


        /// <summary>Gets or sets the HireDate property</summary>
		[DisplayName("Hire Date"), Display(Name = "Hire Date")]
		public Nullable<System.DateTime> HireDate
        {
            get { return this._HireDate; }
			set { this.SetProperty(ref this._HireDate, value); }
        }

		/// <summary> HireDate backing field</summary>
        private Nullable<System.DateTime> _HireDate;


        /// <summary>Gets or sets the Address property</summary>
		[StringLength(70)]
		[DisplayName("Address"), Display(Name = "Address")]
		public string Address
        {
            get { return this._Address; }
			set { this.SetProperty(ref this._Address, value); }
        }

		/// <summary> Address backing field</summary>
        private string _Address;


        /// <summary>Gets or sets the City property</summary>
		[StringLength(40)]
		[DisplayName("City"), Display(Name = "City")]
		public string City
        {
            get { return this._City; }
			set { this.SetProperty(ref this._City, value); }
        }

		/// <summary> City backing field</summary>
        private string _City;


        /// <summary>Gets or sets the State property</summary>
		[StringLength(40)]
		[DisplayName("State"), Display(Name = "State")]
		public string State
        {
            get { return this._State; }
			set { this.SetProperty(ref this._State, value); }
        }

		/// <summary> State backing field</summary>
        private string _State;


        /// <summary>Gets or sets the Country property</summary>
		[StringLength(40)]
		[DisplayName("Country"), Display(Name = "Country")]
		public string Country
        {
            get { return this._Country; }
			set { this.SetProperty(ref this._Country, value); }
        }

		/// <summary> Country backing field</summary>
        private string _Country;


        /// <summary>Gets or sets the PostalCode property</summary>
		[StringLength(10)]
		[DisplayName("Postal Code"), Display(Name = "Postal Code")]
		public string PostalCode
        {
            get { return this._PostalCode; }
			set { this.SetProperty(ref this._PostalCode, value); }
        }

		/// <summary> PostalCode backing field</summary>
        private string _PostalCode;


        /// <summary>Gets or sets the Phone property</summary>
		[StringLength(24)]
		[DisplayName("Phone"), Display(Name = "Phone")]
		public string Phone
        {
            get { return this._Phone; }
			set { this.SetProperty(ref this._Phone, value); }
        }

		/// <summary> Phone backing field</summary>
        private string _Phone;


        /// <summary>Gets or sets the Fax property</summary>
		[StringLength(24)]
		[DisplayName("Fax"), Display(Name = "Fax")]
		public string Fax
        {
            get { return this._Fax; }
			set { this.SetProperty(ref this._Fax, value); }
        }

		/// <summary> Fax backing field</summary>
        private string _Fax;


        /// <summary>Gets or sets the Email property</summary>
		[StringLength(60)]
		[DisplayName("Email"), Display(Name = "Email")]
		public string Email
        {
            get { return this._Email; }
			set { this.SetProperty(ref this._Email, value); }
        }

		/// <summary> Email backing field</summary>
        private string _Email;


		/// <summary> Gets or sets the Employee2 navigation property</summary>
		public virtual Employee Employee2 { get; set; }

		/// <summary> Gets or sets the Customers navigation property</summary>
		[SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
		public virtual ICollection<Customer> Customers { get; set; }

		/// <summary> Gets or sets the Employee1 navigation property</summary>
		[SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
		public virtual ICollection<Employee> Employee1 { get; set; }

	        
		#region IEditableObject

		private Employee_Backup _Employee_Backup;

		private struct Employee_Backup 
		{
			internal int _EmployeeId;
			internal string _LastName;
			internal string _FirstName;
			internal string _Title;
			internal Nullable<int> _ReportsTo;
			internal Nullable<System.DateTime> _BirthDate;
			internal Nullable<System.DateTime> _HireDate;
			internal string _Address;
			internal string _City;
			internal string _State;
			internal string _Country;
			internal string _PostalCode;
			internal string _Phone;
			internal string _Fax;
			internal string _Email;
		}

        public void BeginEdit()
        {
			_Employee_Backup = new Employee_Backup() 
			{
				_EmployeeId = EmployeeId,
				_LastName = LastName,
				_FirstName = FirstName,
				_Title = Title,
				_ReportsTo = ReportsTo,
				_BirthDate = BirthDate,
				_HireDate = HireDate,
				_Address = Address,
				_City = City,
				_State = State,
				_Country = Country,
				_PostalCode = PostalCode,
				_Phone = Phone,
				_Fax = Fax,
				_Email = Email,
			};
		}

		public void CancelEdit()
        {
			EmployeeId = _Employee_Backup._EmployeeId;
			LastName = _Employee_Backup._LastName;
			FirstName = _Employee_Backup._FirstName;
			Title = _Employee_Backup._Title;
			ReportsTo = _Employee_Backup._ReportsTo;
			BirthDate = _Employee_Backup._BirthDate;
			HireDate = _Employee_Backup._HireDate;
			Address = _Employee_Backup._Address;
			City = _Employee_Backup._City;
			State = _Employee_Backup._State;
			Country = _Employee_Backup._Country;
			PostalCode = _Employee_Backup._PostalCode;
			Phone = _Employee_Backup._Phone;
			Fax = _Employee_Backup._Fax;
			Email = _Employee_Backup._Email;
        }

        public void EndEdit()
        {
			_Employee_Backup._EmployeeId = EmployeeId;
			_Employee_Backup._LastName = LastName;
			_Employee_Backup._FirstName = FirstName;
			_Employee_Backup._Title = Title;
			_Employee_Backup._ReportsTo = ReportsTo;
			_Employee_Backup._BirthDate = BirthDate;
			_Employee_Backup._HireDate = HireDate;
			_Employee_Backup._Address = Address;
			_Employee_Backup._City = City;
			_Employee_Backup._State = State;
			_Employee_Backup._Country = Country;
			_Employee_Backup._PostalCode = PostalCode;
			_Employee_Backup._Phone = Phone;
			_Employee_Backup._Fax = Fax;
			_Employee_Backup._Email = Email;
        }

		#endregion
 
		#region SampleData

		public static Employee GetRandomEmployee()
        {
            return new Employee()
            {
				EmployeeId = 19,
				LastName = "XXXXXXXXXXXXXXXXXXXX",
				FirstName = "XXXXXXXXXXXXXXXXXXXX",
				Title = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				BirthDate = DateTime.Parse("05/23/1968 00:42:06"),
				HireDate = DateTime.Parse("09/16/1952 19:39:00"),
				Address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				City = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				State = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Country = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				PostalCode = "XXXXXXXXXX",
				Phone = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Fax = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Email = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
            };
        }

		public static IList<Employee> GetRandomEmployees()
        {
			var list = new List<Employee>();
			
			list.Add(new Employee()
			{
				EmployeeId = 20,
				LastName = "XXXXXXXXXXXXXXXXXXXX",
				FirstName = "XXXXXXXXXXXXXXXXXXXX",
				Title = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				BirthDate = DateTime.Parse("06/18/1954 04:22:13"),
				HireDate = DateTime.Parse("06/09/2010 01:26:01"),
				Address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				City = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				State = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Country = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				PostalCode = "XXXXXXXXXX",
				Phone = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Fax = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Email = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
			});

			list.Add(new Employee()
			{
				EmployeeId = 21,
				LastName = "XXXXXXXXXXXXXXXXXXXX",
				FirstName = "XXXXXXXXXXXXXXXXXXXX",
				Title = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				BirthDate = DateTime.Parse("08/02/1938 17:02:39"),
				HireDate = DateTime.Parse("08/24/1943 11:02:25"),
				Address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				City = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				State = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Country = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				PostalCode = "XXXXXXXXXX",
				Phone = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Fax = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Email = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
			});

			list.Add(new Employee()
			{
				EmployeeId = 22,
				LastName = "XXXXXXXXXXXXXXXXXXXX",
				FirstName = "XXXXXXXXXXXXXXXXXXXX",
				Title = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				BirthDate = DateTime.Parse("01/20/1959 10:15:31"),
				HireDate = DateTime.Parse("04/22/1947 13:04:36"),
				Address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				City = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				State = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Country = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				PostalCode = "XXXXXXXXXX",
				Phone = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Fax = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Email = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
			});

			list.Add(new Employee()
			{
				EmployeeId = 23,
				LastName = "XXXXXXXXXXXXXXXXXXXX",
				FirstName = "XXXXXXXXXXXXXXXXXXXX",
				Title = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				BirthDate = DateTime.Parse("03/23/2017 09:40:10"),
				HireDate = DateTime.Parse("02/23/2002 08:26:18"),
				Address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				City = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				State = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Country = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				PostalCode = "XXXXXXXXXX",
				Phone = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Fax = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Email = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
			});

			list.Add(new Employee()
			{
				EmployeeId = 24,
				LastName = "XXXXXXXXXXXXXXXXXXXX",
				FirstName = "XXXXXXXXXXXXXXXXXXXX",
				Title = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				BirthDate = DateTime.Parse("06/16/1948 09:51:56"),
				HireDate = DateTime.Parse("03/02/1961 16:53:57"),
				Address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				City = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				State = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				Country = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
				PostalCode = "XXXXXXXXXX",
				Phone = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Fax = "XXXXXXXXXXXXXXXXXXXXXXXX",
				Email = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
			});

			return list;
        }

		#endregion
 

	} 
} 

